version: '{branch}-{build}'
build: off

platform:
  - x86
  - x64

environment:
  global:
    PYTHONUNBUFFERED: True

  matrix:
    - PYTHON_VERSION: 2.7
    - PYTHON_VERSION: 3.3
    - PYTHON_VERSION: 3.4
    - PYTHON_VERSION: 3.5
    - PYTHON_VERSION: 3.6

init:
  # Set environment variables depending based on build cfg
  - set PYTHON=C:\PYTHON%PYTHON_VERSION:.=%
  - if %PLATFORM%==x64 (set PYTHON=%PYTHON%-x64)

  # Prepend newly installed Python to the PATH of this build
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  # Check that we have the expected version, architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"
  - python -c "import ctypes; print(ctypes.sizeof(ctypes.c_wchar))"

test_script:
  - pip install -i https://testpypi.python.org/pypi pythonnet==2.3.0
  - python -c "import clr; assert clr.__version__ == '2.3.0'"
